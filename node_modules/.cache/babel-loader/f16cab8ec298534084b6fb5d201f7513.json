{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luism\\\\OneDrive\\\\Desktop\\\\brewjournal\\\\src\\\\components\\\\Granos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Granos(props) {\n  _s();\n  const granos = props.allGrains;\n  const volumenes = props.volumenes;\n  const factorConversionUnidades = props.factorConversionUnidades;\n  const [unidadDeConversion, setUnidadDeConversion] = useState({\n    multiploGranos: 1,\n    multiploLupulo: 1\n  });\n  const [unidadOriginal, setUnidadOriginal] = useState({\n    unidadOriginalGranos: String,\n    unidadOriginalLupulos: String\n  });\n  const [conversorEngaged, setConversorEngaged] = useState(false);\n  let coeficienteConversionVolumen;\n  if (volumenes.newBatchSize === 0) {\n    coeficienteConversionVolumen = 1;\n  } else {\n    coeficienteConversionVolumen = volumenes.newBatchSize / volumenes.originalBatchSize;\n  }\n\n  /*\r\n  console.log(coeficienteConversionVolumen);\r\n  */\n\n  /*\r\n  let coeficienteConversionVolumen \r\n   coeficienteConversionVolumen= nuevoVolumen/volumenOriginal\r\n  */\n\n  function elegirUnidades(event) {\n    const unidadOriginal = event.target.name;\n    if (unidadOriginal === \"kg\") {\n      setUnidadOriginal({\n        unidadOriginalGranos: \"kg\",\n        unidadOriginalLupulos: \"gr\"\n      });\n    }\n    if (unidadOriginal === \"lbs\") {\n      setUnidadOriginal({\n        unidadOriginalGranos: \"lbs\",\n        unidadOriginalLupulos: \"oz\"\n      });\n    }\n  }\n  function convertirUnidades(event) {\n    const unidadConvertida = event.target.name;\n    setConversorEngaged(true);\n    if (unidadConvertida === \"kg\") {\n      setUnidadDeConversion({\n        multiploGranos: 0.45359237,\n        multiploLupulo: 28.35\n      });\n      setUnidadOriginal({\n        unidadOriginalGranos: \"kg\",\n        unidadOriginalLupulos: \"gr\"\n      });\n    }\n    if (unidadConvertida === \"lbs\") {\n      setUnidadDeConversion({\n        multiploGranos: 2.20462,\n        multiploLupulo: 0.0352733686\n      });\n      setUnidadOriginal({\n        unidadOriginalGranos: \"lbs\",\n        unidadOriginalLupulos: \"oz\"\n      });\n    }\n  }\n  factorConversionUnidades(unidadDeConversion.multiploGranos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Elegir unidad a convertir:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: elegirUnidades,\n      name: \"kg\",\n      children: \"KG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: elegirUnidades,\n      name: \"lbs\",\n      children: \"LBS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Titulo:  \", granos.map(grano => {\n        return grano.titulo;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Original batch size:\", volumenes.originalBatchSize, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Batch size:  \", volumenes.newBatchSize]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Granos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 1\n    }, this), granos.map(grano => {\n      if (grano.nombreGrano === \"\") {\n        return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 42\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Grano: \", grano.nombreGrano, \" Cantidad grano: \", grano.cantidadGrano * unidadDeConversion.multiploGranos * coeficienteConversionVolumen, \" \", unidadOriginal.unidadOriginalGranos]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }, this);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lupulos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }, this), granos.map(grano => {\n      if (grano.nombreLupulo === \"\") {\n        return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 46\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Lupulo: \", grano.nombreLupulo, \" Cantidad Lupulo: \", grano.cantidadLupulo * unidadDeConversion.multiploLupulo * coeficienteConversionVolumen, \" \", unidadOriginal.unidadOriginalLupulos]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this);\n      }\n    }), conversorEngaged ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Convertir a:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: convertirUnidades,\n        name: \"kg\",\n        children: \"KG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: convertirUnidades,\n        name: \"lbs\",\n        children: \"LBS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Granos, \"9BPvZpAurJ71MbdY+Uf6fm1SQXQ=\");\n_c = Granos;\nexport default Granos;\nvar _c;\n$RefreshReg$(_c, \"Granos\");","map":{"version":3,"names":["React","useState","Granos","props","granos","allGrains","volumenes","factorConversionUnidades","unidadDeConversion","setUnidadDeConversion","multiploGranos","multiploLupulo","unidadOriginal","setUnidadOriginal","unidadOriginalGranos","String","unidadOriginalLupulos","conversorEngaged","setConversorEngaged","coeficienteConversionVolumen","newBatchSize","originalBatchSize","elegirUnidades","event","target","name","convertirUnidades","unidadConvertida","map","grano","titulo","nombreGrano","cantidadGrano","nombreLupulo","cantidadLupulo"],"sources":["C:/Users/luism/OneDrive/Desktop/brewjournal/src/components/Granos.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nfunction Granos(props) {\r\n    const granos = props.allGrains\r\n    const volumenes= props.volumenes\r\n   const factorConversionUnidades=props.factorConversionUnidades\r\n    \r\n    const [unidadDeConversion, setUnidadDeConversion]=useState({multiploGranos:1,multiploLupulo:1})\r\n    const [unidadOriginal, setUnidadOriginal]= useState({unidadOriginalGranos:String, unidadOriginalLupulos:String})\r\n\r\n    const [conversorEngaged, setConversorEngaged]= useState(false)\r\n    \r\n    let coeficienteConversionVolumen\r\n    if(volumenes.newBatchSize === 0){\r\n      coeficienteConversionVolumen=1\r\n    }else{coeficienteConversionVolumen=volumenes.newBatchSize/volumenes.originalBatchSize}\r\n   \r\n    /*\r\nconsole.log(coeficienteConversionVolumen);\r\n*/\r\n\r\n  /*\r\n  let coeficienteConversionVolumen \r\n   coeficienteConversionVolumen= nuevoVolumen/volumenOriginal\r\n */\r\n\r\n\r\n function elegirUnidades(event) {\r\n    const unidadOriginal= event.target.name\r\n    if (unidadOriginal ===\"kg\"){\r\n      setUnidadOriginal({unidadOriginalGranos:\"kg\", unidadOriginalLupulos:\"gr\"})\r\n    }\r\n    if (unidadOriginal ===\"lbs\"){\r\n      setUnidadOriginal({unidadOriginalGranos:\"lbs\", unidadOriginalLupulos:\"oz\"})\r\n    }\r\n  }\r\n\r\n function convertirUnidades(event) {\r\n    const unidadConvertida= event.target.name\r\n    setConversorEngaged(true)\r\n       \r\n    if (unidadConvertida ===\"kg\") {\r\n      setUnidadDeConversion({multiploGranos:0.45359237, multiploLupulo: 28.35})\r\n     setUnidadOriginal({unidadOriginalGranos:\"kg\", unidadOriginalLupulos:\"gr\"})\r\n    \r\n    }\r\n    if (unidadConvertida===\"lbs\") {\r\n      setUnidadDeConversion({multiploGranos:2.20462, multiploLupulo:0.0352733686})\r\n      setUnidadOriginal({unidadOriginalGranos:\"lbs\", unidadOriginalLupulos:\"oz\"})  \r\n         \r\n    } \r\n\r\n    \r\n    \r\n  } \r\n  \r\nfactorConversionUnidades(unidadDeConversion.multiploGranos)\r\n  return (\r\n    <div>\r\n    <h3>Elegir unidad a convertir:</h3>\r\n  <button onClick={elegirUnidades} name=\"kg\">KG</button>\r\n  <button onClick={elegirUnidades} name=\"lbs\">LBS</button>\r\n\r\n\r\n    <h1>Titulo:  {granos.map( grano=>{return  grano.titulo })}</h1>\r\n\r\n\r\n\r\n\r\n     <h1>Original batch size:{volumenes.originalBatchSize}  </h1>\r\n\r\n     <h1>Batch size:  {volumenes.newBatchSize}</h1>\r\n    \r\n  \r\n<h2>Granos</h2>\r\n     {granos.map(grano=>{\r\n     if (grano.nombreGrano ===\"\"){return <p></p>}\r\n     else {return <div>\r\n       <div><p>Grano: {grano.nombreGrano} Cantidad grano: {grano.cantidadGrano *unidadDeConversion.multiploGranos*coeficienteConversionVolumen} {unidadOriginal.unidadOriginalGranos}</p></div>     \r\n     </div>\r\n       }})}  \r\n       <h2>Lupulos</h2>\r\n        {granos.map(grano=>{\r\n        if (grano.nombreLupulo ===\"\"){return <p></p>}\r\n        else{return <div>\r\n              <div><p>Lupulo: {grano.nombreLupulo} Cantidad Lupulo: {grano.cantidadLupulo *unidadDeConversion.multiploLupulo*coeficienteConversionVolumen} {unidadOriginal.unidadOriginalLupulos}</p></div>     \r\n            </div>\r\n              }})} \r\n\r\n              \r\n  {conversorEngaged ? null : <div><h3>Convertir a:</h3>\r\n  <button onClick={convertirUnidades} name=\"kg\">KG</button>\r\n  <button onClick={convertirUnidades} name=\"lbs\">LBS</button>\r\n  \r\n  </div> \r\n  }\r\n\r\n\r\n  </div>\r\n  \r\n  );\r\n \r\n}\r\n\r\nexport default Granos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}