{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luism\\\\OneDrive\\\\Desktop\\\\brewjournal\\\\src\\\\pages\\\\Calculador.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport InputGranos from '../components/InputGranos';\nimport Granos from '../components/Granos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = require('axios');\nfunction Calculador() {\n  _s();\n  const [allGrains, setAllGrains] = useState([]);\n  const [volumenes, setVolumenes] = useState({});\n  const [multiplo, setMultiplo] = useState(1);\n  function factorConversionUnidades(conversor) {\n    setMultiplo(conversor);\n  }\n  function newVolums(volums) {\n    setVolumenes(volums);\n  }\n  function newGrain(granoIngresado) {\n    setAllGrains(prevVal => {\n      return [...prevVal, granoIngresado];\n    });\n  }\n  let titulo = allGrains.map(a => a.titulo);\n  let nombreGrano = allGrains.map(a => a.nombreGrano);\n  let nombreLupulo = allGrains.map(a => a.nombreLupulo);\n  let cantidadGrano = allGrains.map(a => a.cantidadGrano);\n  let cantidadLupulo = allGrains.map(a => a.cantidadLupulo);\n  let indexGrano = 0;\n  let grain = \"grano\";\n  let grano;\n  let indexLupulo = 0;\n  let hop = \"lupulo\";\n  let lupulo;\n  let indexCantidadGrano = 0;\n  let grainQuantity = \"cantidadGrano\";\n  let granoCantidad;\n  let indexCantidadLupulo = 0;\n  let hopQuantity = \"cantidadLupulo\";\n  let lupuloCantidad;\n  let dataForDataBase = {};\n  function setDataForDB() {\n    dataForDataBase[\"titulo\"] = titulo[0];\n    nombreGrano.forEach(element => {\n      if (element.length > 0) {\n        indexGrano++;\n        grano = grain.concat(indexGrano);\n        dataForDataBase[grano] = element;\n      }\n    });\n    cantidadGrano.forEach(element => {\n      if (element.length > 0) {\n        indexCantidadGrano++;\n        granoCantidad = grainQuantity.concat(indexCantidadGrano);\n        dataForDataBase[granoCantidad] = element * multiplo;\n      }\n    });\n    nombreLupulo.forEach(element => {\n      if (element.length > 0) {\n        indexLupulo++;\n        lupulo = hop.concat(indexLupulo);\n        dataForDataBase[lupulo] = element;\n      }\n    });\n    cantidadLupulo.forEach(element => {\n      if (element.length > 0) {\n        indexCantidadLupulo++;\n        lupuloCantidad = hopQuantity.concat(indexCantidadLupulo);\n        dataForDataBase[lupuloCantidad] = element * multiplo;\n      }\n    });\n  }\n  setDataForDB();\n  function guardarReceta() {\n    axios.post(\"http://localhost:3000/recetas\", dataForDataBase).then(function (response) {\n      console.log(\"data guardada\");\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Brewery Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputGranos, {\n      newGrain: newGrain,\n      newVolums: newVolums\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Granos, {\n      allGrains: allGrains,\n      volumenes: volumenes,\n      factorConversionUnidades: factorConversionUnidades\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: guardarReceta,\n        children: \"guardar receta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Calculador, \"eSfOOWx4kaWgBw6Mw1ld9llzY1Q=\");\n_c = Calculador;\nexport default Calculador;\nvar _c;\n$RefreshReg$(_c, \"Calculador\");","map":{"version":3,"names":["React","useState","InputGranos","Granos","axios","require","Calculador","allGrains","setAllGrains","volumenes","setVolumenes","multiplo","setMultiplo","factorConversionUnidades","conversor","newVolums","volums","newGrain","granoIngresado","prevVal","titulo","map","a","nombreGrano","nombreLupulo","cantidadGrano","cantidadLupulo","indexGrano","grain","grano","indexLupulo","hop","lupulo","indexCantidadGrano","grainQuantity","granoCantidad","indexCantidadLupulo","hopQuantity","lupuloCantidad","dataForDataBase","setDataForDB","forEach","element","length","concat","guardarReceta","post","then","response","console","log"],"sources":["C:/Users/luism/OneDrive/Desktop/brewjournal/src/pages/Calculador.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport InputGranos from '../components/InputGranos';\r\nimport Granos from '../components/Granos';\r\nconst axios = require('axios');\r\n\r\n\r\nfunction Calculador() {\r\n\r\n  const [allGrains, setAllGrains]=useState([])\r\nconst [volumenes, setVolumenes]=useState({})\r\nconst [multiplo, setMultiplo]=useState(1)\r\n\r\nfunction factorConversionUnidades(conversor){\r\n  setMultiplo(conversor)\r\n}\r\n\r\nfunction newVolums(volums) {\r\n  setVolumenes(volums) \r\n}  \r\n\r\n  function newGrain(granoIngresado){\r\nsetAllGrains(prevVal=>{return [...prevVal,granoIngresado]})  \r\n  }\r\n\r\nlet titulo = allGrains.map(a => a.titulo);\r\nlet nombreGrano = allGrains.map(a => a.nombreGrano);\r\nlet nombreLupulo = allGrains.map(a => a.nombreLupulo);\r\nlet cantidadGrano = allGrains.map(a => a.cantidadGrano);\r\nlet cantidadLupulo = allGrains.map(a => a.cantidadLupulo);\r\n\r\nlet indexGrano=0 \r\nlet grain=\"grano\"\r\nlet grano\r\n\r\nlet indexLupulo=0 \r\nlet hop=\"lupulo\"\r\nlet lupulo\r\n\r\nlet indexCantidadGrano=0 \r\nlet grainQuantity=\"cantidadGrano\"\r\nlet granoCantidad\r\n\r\nlet indexCantidadLupulo=0 \r\nlet hopQuantity=\"cantidadLupulo\"\r\nlet lupuloCantidad\r\n\r\nlet dataForDataBase={}\r\n\r\nfunction setDataForDB(){ \r\n    dataForDataBase[\"titulo\"]=titulo[0]\r\n    \r\n        nombreGrano.forEach(element => {   \r\n          if (element.length > 0) {\r\n            indexGrano++\r\n            grano=grain.concat(indexGrano)\r\n          dataForDataBase[grano]=element               \r\n          }         \r\n        });\r\n\r\n        cantidadGrano.forEach(element => {   \r\n          if (element.length > 0) {\r\n            indexCantidadGrano++\r\n            granoCantidad=grainQuantity.concat(indexCantidadGrano)\r\n          dataForDataBase[granoCantidad]=element * multiplo            \r\n          }            \r\n        });\r\n\r\n        nombreLupulo.forEach(element => {   \r\n          if (element.length > 0) {\r\n            indexLupulo++\r\n            lupulo=hop.concat(indexLupulo)\r\n          dataForDataBase[lupulo]=element            \r\n          }          \r\n        });\r\n\r\n        cantidadLupulo.forEach(element => {   \r\n          if (element.length > 0) {\r\n            indexCantidadLupulo++\r\n            lupuloCantidad=hopQuantity.concat(indexCantidadLupulo)\r\n          dataForDataBase[lupuloCantidad]=element  * multiplo             \r\n          }         \r\n        });\r\n  }\r\n\r\n \r\n  setDataForDB()\r\n\r\n\r\n\r\nfunction guardarReceta() {\r\n     axios.post(\"http://localhost:3000/recetas\",\r\n     dataForDataBase )\r\n   .then(function (response) {\r\n    console.log(\"data guardada\");\r\n  })\r\n  }\r\n\r\n  return (    \r\n    <div>\r\n    <h1>Brewery Calculator</h1>\r\n  <InputGranos newGrain={newGrain} newVolums={newVolums}/>\r\n   <Granos allGrains={allGrains} volumenes={volumenes} factorConversionUnidades={factorConversionUnidades} />\r\n   <div><button onClick={guardarReceta}>guardar receta</button></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Calculador;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AAAC;AAC1C,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAG9B,SAASC,UAAU,GAAG;EAAA;EAEpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAACT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAACX,QAAQ,CAAC,CAAC,CAAC;EAEzC,SAASY,wBAAwB,CAACC,SAAS,EAAC;IAC1CF,WAAW,CAACE,SAAS,CAAC;EACxB;EAEA,SAASC,SAAS,CAACC,MAAM,EAAE;IACzBN,YAAY,CAACM,MAAM,CAAC;EACtB;EAEE,SAASC,QAAQ,CAACC,cAAc,EAAC;IACnCV,YAAY,CAACW,OAAO,IAAE;MAAC,OAAO,CAAC,GAAGA,OAAO,EAACD,cAAc,CAAC;IAAA,CAAC,CAAC;EACzD;EAEF,IAAIE,MAAM,GAAGb,SAAS,CAACc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACF,MAAM,CAAC;EACzC,IAAIG,WAAW,GAAGhB,SAAS,CAACc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC;EACnD,IAAIC,YAAY,GAAGjB,SAAS,CAACc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACE,YAAY,CAAC;EACrD,IAAIC,aAAa,GAAGlB,SAAS,CAACc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACG,aAAa,CAAC;EACvD,IAAIC,cAAc,GAAGnB,SAAS,CAACc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACI,cAAc,CAAC;EAEzD,IAAIC,UAAU,GAAC,CAAC;EAChB,IAAIC,KAAK,GAAC,OAAO;EACjB,IAAIC,KAAK;EAET,IAAIC,WAAW,GAAC,CAAC;EACjB,IAAIC,GAAG,GAAC,QAAQ;EAChB,IAAIC,MAAM;EAEV,IAAIC,kBAAkB,GAAC,CAAC;EACxB,IAAIC,aAAa,GAAC,eAAe;EACjC,IAAIC,aAAa;EAEjB,IAAIC,mBAAmB,GAAC,CAAC;EACzB,IAAIC,WAAW,GAAC,gBAAgB;EAChC,IAAIC,cAAc;EAElB,IAAIC,eAAe,GAAC,CAAC,CAAC;EAEtB,SAASC,YAAY,GAAE;IACnBD,eAAe,CAAC,QAAQ,CAAC,GAACnB,MAAM,CAAC,CAAC,CAAC;IAE/BG,WAAW,CAACkB,OAAO,CAACC,OAAO,IAAI;MAC7B,IAAIA,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;QACtBhB,UAAU,EAAE;QACZE,KAAK,GAACD,KAAK,CAACgB,MAAM,CAACjB,UAAU,CAAC;QAChCY,eAAe,CAACV,KAAK,CAAC,GAACa,OAAO;MAC9B;IACF,CAAC,CAAC;IAEFjB,aAAa,CAACgB,OAAO,CAACC,OAAO,IAAI;MAC/B,IAAIA,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;QACtBV,kBAAkB,EAAE;QACpBE,aAAa,GAACD,aAAa,CAACU,MAAM,CAACX,kBAAkB,CAAC;QACxDM,eAAe,CAACJ,aAAa,CAAC,GAACO,OAAO,GAAG/B,QAAQ;MACjD;IACF,CAAC,CAAC;IAEFa,YAAY,CAACiB,OAAO,CAACC,OAAO,IAAI;MAC9B,IAAIA,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;QACtBb,WAAW,EAAE;QACbE,MAAM,GAACD,GAAG,CAACa,MAAM,CAACd,WAAW,CAAC;QAChCS,eAAe,CAACP,MAAM,CAAC,GAACU,OAAO;MAC/B;IACF,CAAC,CAAC;IAEFhB,cAAc,CAACe,OAAO,CAACC,OAAO,IAAI;MAChC,IAAIA,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;QACtBP,mBAAmB,EAAE;QACrBE,cAAc,GAACD,WAAW,CAACO,MAAM,CAACR,mBAAmB,CAAC;QACxDG,eAAe,CAACD,cAAc,CAAC,GAACI,OAAO,GAAI/B,QAAQ;MACnD;IACF,CAAC,CAAC;EACR;EAGA6B,YAAY,EAAE;EAIhB,SAASK,aAAa,GAAG;IACpBzC,KAAK,CAAC0C,IAAI,CAAC,+BAA+B,EAC1CP,eAAe,CAAE,CAClBQ,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9B,CAAC,CAAC;EACF;EAEA,oBACE;IAAA,wBACA;MAAA,UAAI;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7B,QAAC,WAAW;MAAC,QAAQ,EAAEjC,QAAS;MAAC,SAAS,EAAEF;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eACvD,QAAC,MAAM;MAAC,SAAS,EAAER,SAAU;MAAC,SAAS,EAAEE,SAAU;MAAC,wBAAwB,EAAEI;IAAyB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1G;MAAA,uBAAK;QAAQ,OAAO,EAAEgC,aAAc;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3D;AAGV;AAAC,GApGQvC,UAAU;AAAA,KAAVA,UAAU;AAsGnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}