{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luism\\\\Desktop\\\\brewjournal\\\\src\\\\components\\\\Granos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Granos(props) {\n  _s();\n\n  const granos = props.allGrains;\n  const volumenes = props.volumenes;\n  const factorConversionUnidades = props.factorConversionUnidades;\n  const [unidadDeConversion, setUnidadDeConversion] = useState({\n    multiploGranos: 1,\n    multiploLupulo: 1\n  });\n  const [unidadOriginal, setUnidadOriginal] = useState({\n    unidadOriginalGranos: String,\n    unidadOriginalLupulos: String\n  });\n  const [conversorEngaged, setConversorEngaged] = useState(false);\n  let coeficienteConversionVolumen;\n\n  if (volumenes.newBatchSize === 0) {\n    coeficienteConversionVolumen = 1;\n  } else {\n    coeficienteConversionVolumen = volumenes.newBatchSize / volumenes.originalBatchSize;\n  }\n  /*\r\n  console.log(coeficienteConversionVolumen);\r\n  */\n\n  /*\r\n  let coeficienteConversionVolumen \r\n   coeficienteConversionVolumen= nuevoVolumen/volumenOriginal\r\n  */\n\n\n  function elegirUnidades(event) {\n    const unidadOriginal = event.target.name;\n\n    if (unidadOriginal === \"kg\") {\n      setUnidadOriginal({\n        unidadOriginalGranos: \"kg\",\n        unidadOriginalLupulos: \"gr\"\n      });\n    }\n\n    if (unidadOriginal === \"lbs\") {\n      setUnidadOriginal({\n        unidadOriginalGranos: \"lbs\",\n        unidadOriginalLupulos: \"oz\"\n      });\n    }\n  }\n\n  function convertirUnidades(event) {\n    const unidadConvertida = event.target.name;\n    setConversorEngaged(true);\n\n    if (unidadConvertida === \"kg\") {\n      setUnidadDeConversion({\n        multiploGranos: 0.45359237,\n        multiploLupulo: 28.35\n      });\n      setUnidadOriginal({\n        unidadOriginalGranos: \"kg\",\n        unidadOriginalLupulos: \"gr\"\n      });\n    }\n\n    if (unidadConvertida === \"lbs\") {\n      setUnidadDeConversion({\n        multiploGranos: 2.20462,\n        multiploLupulo: 0.0352733686\n      });\n      setUnidadOriginal({\n        unidadOriginalGranos: \"lbs\",\n        unidadOriginalLupulos: \"oz\"\n      });\n    }\n  }\n\n  factorConversionUnidades(unidadDeConversion.multiploGranos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Elegir unidad a convertir:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: elegirUnidades,\n      name: \"kg\",\n      children: \"KG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: elegirUnidades,\n      name: \"lbs\",\n      children: \"LBS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Titulo:  \", granos.map(grano => {\n        return grano.titulo;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Original batch size:\", volumenes.originalBatchSize, \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Batch size:  \", volumenes.newBatchSize]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Granos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 1\n    }, this), granos.map(grano => {\n      if (grano.nombreGrano === \"\") {\n        return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 42\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Grano: \", grano.nombreGrano, \" Cantidad grano: \", grano.cantidadGrano * unidadDeConversion.multiploGranos * coeficienteConversionVolumen, \" \", unidadOriginal.unidadOriginalGranos]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }, this);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lupulos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }, this), granos.map(grano => {\n      if (grano.nombreLupulo === \"\") {\n        return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 46\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Lupulo: \", grano.nombreLupulo, \" Cantidad Lupulo: \", grano.cantidadLupulo * unidadDeConversion.multiploLupulo * coeficienteConversionVolumen, \" \", unidadOriginal.unidadOriginalLupulos]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this);\n      }\n    }), conversorEngaged ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Convertir a:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: convertirUnidades,\n        name: \"kg\",\n        children: \"KG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: convertirUnidades,\n        name: \"lbs\",\n        children: \"LBS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Granos, \"9BPvZpAurJ71MbdY+Uf6fm1SQXQ=\");\n\n_c = Granos;\nexport default Granos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Granos\");","map":{"version":3,"sources":["C:/Users/luism/Desktop/brewjournal/src/components/Granos.js"],"names":["React","useState","Granos","props","granos","allGrains","volumenes","factorConversionUnidades","unidadDeConversion","setUnidadDeConversion","multiploGranos","multiploLupulo","unidadOriginal","setUnidadOriginal","unidadOriginalGranos","String","unidadOriginalLupulos","conversorEngaged","setConversorEngaged","coeficienteConversionVolumen","newBatchSize","originalBatchSize","elegirUnidades","event","target","name","convertirUnidades","unidadConvertida","map","grano","titulo","nombreGrano","cantidadGrano","nombreLupulo","cantidadLupulo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nfunction Granos(props) {\r\n    const granos = props.allGrains\r\n    const volumenes= props.volumenes\r\n   const factorConversionUnidades=props.factorConversionUnidades\r\n    \r\n    const [unidadDeConversion, setUnidadDeConversion]=useState({multiploGranos:1,multiploLupulo:1})\r\n    const [unidadOriginal, setUnidadOriginal]= useState({unidadOriginalGranos:String, unidadOriginalLupulos:String})\r\n\r\n    const [conversorEngaged, setConversorEngaged]= useState(false)\r\n    \r\n    let coeficienteConversionVolumen\r\n    if(volumenes.newBatchSize === 0){\r\n      coeficienteConversionVolumen=1\r\n    }else{coeficienteConversionVolumen=volumenes.newBatchSize/volumenes.originalBatchSize}\r\n   \r\n    /*\r\nconsole.log(coeficienteConversionVolumen);\r\n*/\r\n\r\n  /*\r\n  let coeficienteConversionVolumen \r\n   coeficienteConversionVolumen= nuevoVolumen/volumenOriginal\r\n */\r\n\r\n\r\n function elegirUnidades(event) {\r\n    const unidadOriginal= event.target.name\r\n    if (unidadOriginal ===\"kg\"){\r\n      setUnidadOriginal({unidadOriginalGranos:\"kg\", unidadOriginalLupulos:\"gr\"})\r\n    }\r\n    if (unidadOriginal ===\"lbs\"){\r\n      setUnidadOriginal({unidadOriginalGranos:\"lbs\", unidadOriginalLupulos:\"oz\"})\r\n    }\r\n  }\r\n\r\n function convertirUnidades(event) {\r\n    const unidadConvertida= event.target.name\r\n    setConversorEngaged(true)\r\n       \r\n    if (unidadConvertida ===\"kg\") {\r\n      setUnidadDeConversion({multiploGranos:0.45359237, multiploLupulo: 28.35})\r\n     setUnidadOriginal({unidadOriginalGranos:\"kg\", unidadOriginalLupulos:\"gr\"})\r\n    \r\n    }\r\n    if (unidadConvertida===\"lbs\") {\r\n      setUnidadDeConversion({multiploGranos:2.20462, multiploLupulo:0.0352733686})\r\n      setUnidadOriginal({unidadOriginalGranos:\"lbs\", unidadOriginalLupulos:\"oz\"})  \r\n         \r\n    } \r\n\r\n    \r\n    \r\n  } \r\n  \r\nfactorConversionUnidades(unidadDeConversion.multiploGranos)\r\n  return (\r\n    <div>\r\n    <h3>Elegir unidad a convertir:</h3>\r\n  <button onClick={elegirUnidades} name=\"kg\">KG</button>\r\n  <button onClick={elegirUnidades} name=\"lbs\">LBS</button>\r\n\r\n\r\n    <h1>Titulo:  {granos.map( grano=>{return  grano.titulo })}</h1>\r\n\r\n\r\n\r\n\r\n     <h1>Original batch size:{volumenes.originalBatchSize}  </h1>\r\n\r\n     <h1>Batch size:  {volumenes.newBatchSize}</h1>\r\n    \r\n  \r\n<h2>Granos</h2>\r\n     {granos.map(grano=>{\r\n     if (grano.nombreGrano ===\"\"){return <p></p>}\r\n     else {return <div>\r\n       <div><p>Grano: {grano.nombreGrano} Cantidad grano: {grano.cantidadGrano *unidadDeConversion.multiploGranos*coeficienteConversionVolumen} {unidadOriginal.unidadOriginalGranos}</p></div>     \r\n     </div>\r\n       }})}  \r\n       <h2>Lupulos</h2>\r\n        {granos.map(grano=>{\r\n        if (grano.nombreLupulo ===\"\"){return <p></p>}\r\n        else{return <div>\r\n              <div><p>Lupulo: {grano.nombreLupulo} Cantidad Lupulo: {grano.cantidadLupulo *unidadDeConversion.multiploLupulo*coeficienteConversionVolumen} {unidadOriginal.unidadOriginalLupulos}</p></div>     \r\n            </div>\r\n              }})} \r\n\r\n              \r\n  {conversorEngaged ? null : <div><h3>Convertir a:</h3>\r\n  <button onClick={convertirUnidades} name=\"kg\">KG</button>\r\n  <button onClick={convertirUnidades} name=\"lbs\">LBS</button>\r\n  \r\n  </div> \r\n  }\r\n\r\n\r\n  </div>\r\n  \r\n  );\r\n \r\n}\r\n\r\nexport default Granos;\r\n"]},"metadata":{},"sourceType":"module"}