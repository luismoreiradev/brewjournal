{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luism\\\\Desktop\\\\brewjournal\\\\src\\\\pages\\\\Calculador.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputGranos from '../components/InputGranos';\nimport Granos from '../components/Granos';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nfunction Calculador() {\n  _s();\n\n  const [allGrains, setAllGrains] = useState([]);\n  const [volumenes, setVolumenes] = useState({});\n  const [multiplo, setMultiplo] = useState(1);\n  const [instrucciones, setInstrucciones] = useState(\"\");\n\n  function factorConversionUnidades(conversor) {\n    setMultiplo(conversor);\n  }\n\n  function newVolums(volums) {\n    setVolumenes(volums);\n  }\n\n  function newGrain(granoIngresado) {\n    setAllGrains(prevVal => {\n      return [...prevVal, granoIngresado];\n    });\n  }\n\n  let titulo = allGrains.map(a => a.titulo);\n  let nombreGrano = allGrains.map(a => a.nombreGrano);\n  let nombreLupulo = allGrains.map(a => a.nombreLupulo);\n  let cantidadGrano = allGrains.map(a => a.cantidadGrano);\n  let cantidadLupulo = allGrains.map(a => a.cantidadLupulo);\n  let indexGrano = 0;\n  let grain = \"grano\";\n  let grano;\n  let indexLupulo = 0;\n  let hop = \"lupulo\";\n  let lupulo;\n  let indexCantidadGrano = 0;\n  let grainQuantity = \"cantidadGrano\";\n  let granoCantidad;\n  let indexCantidadLupulo = 0;\n  let hopQuantity = \"cantidadLupulo\";\n  let lupuloCantidad;\n  let dataForDataBase = {};\n\n  function handleChangeInstrucciones(event) {\n    const value = event.target.value;\n    setInstrucciones(value);\n    console.log(instrucciones);\n    /*\r\n    handleUpdateInstrucciones()\r\n    */\n  }\n  /*\r\n  function handleUpdateInstrucciones(instrucciones) {\r\n    console.log(instrucciones);\r\n  }\r\n  */\n\n\n  function setDataForDB() {\n    dataForDataBase[\"titulo\"] = titulo[0];\n    dataForDataBase[\"instrucciones\"] = instrucciones;\n    nombreGrano.forEach(element => {\n      if (element.length > 0) {\n        indexGrano++;\n        grano = grain.concat(indexGrano);\n        dataForDataBase[grano] = element;\n      }\n    });\n    cantidadGrano.forEach(element => {\n      if (element.length > 0) {\n        indexCantidadGrano++;\n        granoCantidad = grainQuantity.concat(indexCantidadGrano);\n        dataForDataBase[granoCantidad] = element * multiplo;\n      }\n    });\n    nombreLupulo.forEach(element => {\n      if (element.length > 0) {\n        indexLupulo++;\n        lupulo = hop.concat(indexLupulo);\n        dataForDataBase[lupulo] = element;\n      }\n    });\n    cantidadLupulo.forEach(element => {\n      if (element.length > 0) {\n        indexCantidadLupulo++;\n        lupuloCantidad = hopQuantity.concat(indexCantidadLupulo);\n        dataForDataBase[lupuloCantidad] = element * multiplo;\n      }\n    });\n  }\n\n  setDataForDB();\n  const history = useHistory();\n\n  const irAhome = () => {\n    let path = `/recetas`;\n    history.push(path);\n    window.location.reload(false);\n  };\n\n  function guardarReceta() {\n    console.log(dataForDataBase);\n    axios.post(\"http://localhost:3000/recetas\", dataForDataBase).then(function (response) {\n      console.log(\"data guardada\");\n      irAhome();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Brewery Calculator!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputGranos, {\n      newGrain: newGrain,\n      newVolums: newVolums\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Granos, {\n      allGrains: allGrains,\n      volumenes: volumenes,\n      factorConversionUnidades: factorConversionUnidades\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"instrucciones\",\n        children: \"Instrucciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: handleChangeInstrucciones,\n        value: instrucciones,\n        name: \"instrucciones\",\n        rows: \"5\",\n        cols: \"33\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: guardarReceta,\n        children: \"guardar receta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calculador, \"/x/XffwqqGwjD8SlZGJKlL6hpBA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Calculador;\nexport default Calculador;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculador\");","map":{"version":3,"sources":["C:/Users/luism/Desktop/brewjournal/src/pages/Calculador.js"],"names":["React","useState","InputGranos","Granos","useHistory","axios","require","Calculador","allGrains","setAllGrains","volumenes","setVolumenes","multiplo","setMultiplo","instrucciones","setInstrucciones","factorConversionUnidades","conversor","newVolums","volums","newGrain","granoIngresado","prevVal","titulo","map","a","nombreGrano","nombreLupulo","cantidadGrano","cantidadLupulo","indexGrano","grain","grano","indexLupulo","hop","lupulo","indexCantidadGrano","grainQuantity","granoCantidad","indexCantidadLupulo","hopQuantity","lupuloCantidad","dataForDataBase","handleChangeInstrucciones","event","value","target","console","log","setDataForDB","forEach","element","length","concat","history","irAhome","path","push","window","location","reload","guardarReceta","post","then","response"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport InputGranos from '../components/InputGranos';\r\nimport Granos from '../components/Granos';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst axios = require('axios');\r\n\r\n\r\nfunction Calculador() {\r\n\r\n  const [allGrains, setAllGrains]=useState([])\r\nconst [volumenes, setVolumenes]=useState({})\r\nconst [multiplo, setMultiplo]=useState(1)\r\nconst[instrucciones, setInstrucciones]=useState(\"\")\r\n\r\nfunction factorConversionUnidades(conversor){\r\n  setMultiplo(conversor)\r\n}\r\n\r\nfunction newVolums(volums) {\r\n  setVolumenes(volums) \r\n}  \r\n\r\n  function newGrain(granoIngresado){\r\nsetAllGrains(prevVal=>{return [...prevVal,granoIngresado]})  \r\n  }\r\n\r\nlet titulo = allGrains.map(a => a.titulo);\r\nlet nombreGrano = allGrains.map(a => a.nombreGrano);\r\nlet nombreLupulo = allGrains.map(a => a.nombreLupulo);\r\nlet cantidadGrano = allGrains.map(a => a.cantidadGrano);\r\nlet cantidadLupulo = allGrains.map(a => a.cantidadLupulo);\r\n\r\nlet indexGrano=0 \r\nlet grain=\"grano\"\r\nlet grano\r\n\r\nlet indexLupulo=0 \r\nlet hop=\"lupulo\"\r\nlet lupulo\r\n\r\nlet indexCantidadGrano=0 \r\nlet grainQuantity=\"cantidadGrano\"\r\nlet granoCantidad\r\n\r\nlet indexCantidadLupulo=0 \r\nlet hopQuantity=\"cantidadLupulo\"\r\nlet lupuloCantidad\r\n\r\nlet dataForDataBase={}\r\n\r\nfunction handleChangeInstrucciones(event) {\r\n   \r\n  const value = event.target.value;\r\n  setInstrucciones(value)\r\n  console.log(instrucciones);\r\n  /*\r\n  handleUpdateInstrucciones()\r\n  */\r\n}\r\n/*\r\nfunction handleUpdateInstrucciones(instrucciones) {\r\n  console.log(instrucciones);\r\n}\r\n*/\r\n\r\nfunction setDataForDB(){ \r\n    dataForDataBase[\"titulo\"]=titulo[0]\r\n    dataForDataBase[\"instrucciones\"]=instrucciones\r\n    \r\n        nombreGrano.forEach(element => {   \r\n          if (element.length > 0) {\r\n            indexGrano++\r\n            grano=grain.concat(indexGrano)\r\n          dataForDataBase[grano]=element               \r\n          }         \r\n        });\r\n\r\n        cantidadGrano.forEach(element => {   \r\n          if (element.length > 0) {\r\n            indexCantidadGrano++\r\n            granoCantidad=grainQuantity.concat(indexCantidadGrano)\r\n          dataForDataBase[granoCantidad]=element * multiplo            \r\n          }            \r\n        });\r\n\r\n        nombreLupulo.forEach(element => {   \r\n          if (element.length > 0) {\r\n            indexLupulo++\r\n            lupulo=hop.concat(indexLupulo)\r\n          dataForDataBase[lupulo]=element            \r\n          }          \r\n        });\r\n\r\n        cantidadLupulo.forEach(element => {   \r\n          if (element.length > 0) {\r\n            indexCantidadLupulo++\r\n            lupuloCantidad=hopQuantity.concat(indexCantidadLupulo)\r\n          dataForDataBase[lupuloCantidad]=element  * multiplo             \r\n          }         \r\n        });\r\n  }\r\n\r\n \r\n  setDataForDB()\r\n\r\n  \r\n  const history = useHistory();\r\n  const irAhome = () => {\r\n    let path = `/recetas`; \r\n    history.push(path);\r\n    window.location.reload(false)\r\n    };\r\n\r\n\r\nfunction guardarReceta() {\r\n  console.log(dataForDataBase);\r\n     axios.post(\"http://localhost:3000/recetas\",\r\n     dataForDataBase )\r\n   .then(function (response) {\r\n    console.log(\"data guardada\");\r\n    irAhome()\r\n  })\r\n  \r\n  }\r\n\r\n  return (    \r\n    <div>\r\n    <h1>Brewery Calculator!!!</h1>\r\n  <InputGranos newGrain={newGrain} newVolums={newVolums}/>\r\n   <Granos allGrains={allGrains} volumenes={volumenes} factorConversionUnidades={factorConversionUnidades} />\r\n   <form>\r\n    <label for=\"instrucciones\">Instrucciones</label>\r\n    <textarea onChange={handleChangeInstrucciones} value={instrucciones} name=\"instrucciones\" rows=\"5\" cols=\"33\"></textarea>\r\n   </form>\r\n   <div><button onClick={guardarReceta}>guardar receta</button></div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Calculador;\r\n"]},"metadata":{},"sourceType":"module"}